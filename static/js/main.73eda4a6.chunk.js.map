{"version":3,"sources":["components/Header.js","components/BookEntry.js","components/Books.js","components/LibraryHeader.js","components/MainLibrary.js","components/AddBook.js","App.js","index.js"],"names":["Header","className","Component","BookEntry","this","props","book","toggleRead","deleteEntry","values","Object","deleteIcon","icon","onClick","bind","id","checkIcon","style","color","timesIcon","push","map","value","ind","key","Books","books","LibraryHeader","fields","field","MainLibrary","toggleAddForm","clearLib","AddBook","handleChange","e","setState","target","name","handleSubmit","preventDefault","state","title","author","year","genre","pages","read","showForm","onSubmit","htmlFor","type","required","placeholder","onChange","min","max","library","add","fas","LibraryApp","save","lib","localStorage","setItem","JSON","stringify","bookObj","length","newObj","forEach","f","concat","filter","addForm","parse","getItem","loadLibrary","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73eda4a6.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n\n  render() {\n    return (\n      <header className='header'>\n        <h1>John Paul's Library</h1>\n        <p>Books I have read or intend to read</p>\n      </header>\n    );\n  }\n}\n\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass BookEntry extends Component {\n\n  render() {\n    const { book, toggleRead, deleteEntry } = this.props;\n\n    const values = Object.values(book);\n    const deleteIcon = <FontAwesomeIcon icon=\"trash\" onClick={deleteEntry.bind(this, book.id)}/>\n    const checkIcon = <FontAwesomeIcon icon=\"check\" style={{color: '#23f'}}/>\n    const timesIcon = <FontAwesomeIcon icon=\"times\"/>\n    values.push(deleteIcon);\n\n    return (\n      <tr>\n        {values.map((value, ind) => {\n          if (typeof value === \"boolean\"){\n            return <td key={ind} onClick={toggleRead.bind(this, book.id)}>\n                    {value? checkIcon: timesIcon}\n                    </td>;\n          } else {\n            return <td key={ind}>{value}</td>\n          }\n        })}\n      </tr>\n    );\n  }\n}\n\n// Proptypes\nBookEntry.propTypes = {\n  book: PropTypes.object.isRequired\n}\n\nexport default BookEntry;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport BookEntry from './BookEntry';\n\n\nclass Books extends Component {\n\n  render() {\n    const { books, toggleRead, deleteEntry } = this.props;\n    return (\n      <tbody>\n        {\n          books.map((book) => (\n            <BookEntry \n              book={book} \n              key={book.id}\n              toggleRead={toggleRead}\n              deleteEntry={deleteEntry}\n            />\n          ))\n        }\n      </tbody>\n    );\n  }\n}\n\n// Proptypes\nBooks.propTypes = {\n  books: PropTypes.array.isRequired\n}\n\nexport default Books;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass LibraryHeader extends Component {\n\n  render() {\n    let fields =  this.props.fields;\n\n    return (\n      <thead className=\"libHeader\">\n        <tr>\n          {\n            fields.map((field) => (\n              <th key={field}>{field}</th>\n            ))\n          }\n        </tr>\n      </thead>\n    );\n  }\n}\n\n// Proptypes\nLibraryHeader.propTypes = {\n  fields: PropTypes.array.isRequired\n}\n\nexport default LibraryHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Books from './Books';\nimport LibraryHeader from './LibraryHeader';\n\n\nclass MainLibrary extends Component {\n\n  render() {\n    const { books, toggleRead, deleteEntry, fields, toggleAddForm, clearLib } = this.props;\n    return (\n      <div className=\" container main\">\n        <div>\n          <button onClick={toggleAddForm} className='btn'>Add New Book</button>\n          <button onClick={clearLib} className='btn'>Clear Library</button>\n        </div>\n        <table>\n          <LibraryHeader fields={fields}/>\n          <Books \n            books={books}\n            toggleRead={toggleRead}\n            deleteEntry={deleteEntry}\n          />\n        </table>\n      </div>\n    );\n  }\n}\n\n// Proptypes\nMainLibrary.propTypes = {\n  books: PropTypes.array.isRequired\n}\n\nexport default MainLibrary;\n","\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddBook extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      author: '',\n      year: '',\n      genre: '',\n      pages: '',\n      read: false\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState(\n      {\n        [e.target.name]: e.target.value\n      }\n    )\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.handleSubmit(this.state);\n  }\n\n\n  render() {\n    const {showForm, toggleAddForm} = this.props;\n    return (\n    <div className={\"add-book-modal \" + showForm}>\n\t\t\t<span className=\"close\" title=\"Click to close\" onClick={toggleAddForm}>&times;</span>\n\n\t\t\t<div id=\"book-info-form\" className=\"modal-content\" >\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<label htmlFor=\"Title\">Title</label>\n          <input type=\"text\" name=\"title\" id=\"title\" required placeholder=\"Title\"\n            value={this.state.title} onChange={this.handleChange}/>\n\n\t\t\t\t\t<label htmlFor=\"author\">Author</label>\n          <input type=\"text\" name=\"author\" id=\"author\" required placeholder=\"Author\"\n            onChange={this.handleChange}/>\n\n\t\t\t\t\t<label htmlFor=\"year\">Year</label>\n          <input type=\"number\" name=\"year\" id=\"year\" min='1600' max='2099' required \n            value={this.state.year}\n            onChange={this.handleChange}/>\n\n\t\t\t\t\t<label htmlFor=\"genre\">Genre</label>\n          <input type=\"text\" name=\"genre\" id=\"genre\" required placeholder=\"Genre\"\n           onChange={this.handleChange}/>\n\n\t\t\t\t\t<label htmlFor=\"pages\">Pages</label>\n          <input type=\"number\" name=\"pages\" id=\"pages\" required placeholder=\"Number of Pages\"\n            onChange={this.handleChange}/>\n\n\t\t\t\t\t<button type=\"submit\" id=\"add-book\" onClick={toggleAddForm}>Add New Book</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n    )\n  }\n}\n\n// Proptypes\nAddBook.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n}\n\nexport default AddBook;\n","import React from 'react';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\n\nimport Header from './components/Header';\nimport MainLibrary from './components/MainLibrary';\nimport AddBook from './components/AddBook';\n\nimport './App.css';\nimport './index.css';\n\n\nlibrary.add(fas);\n\n\nclass LibraryApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      addForm: false,\n    }\n  }\n\n  loadLibrary() {\n    return JSON.parse(localStorage.getItem('bookLib'));\n  }\n\n  componentDidMount() {\n\n    this.setState({\n      books: this.loadLibrary()\n    })\n  }\n\n  save = (lib) => {\n    localStorage.setItem('bookLib', JSON.stringify(lib));\n  }\n\n  handleSubmit = (bookObj) => {\n    const fields = ['id', 'title', 'author', 'year', 'genre', 'pages', 'read'];\n    bookObj.id = this.state.books.length + 1;\n    const newObj = {};\n    fields.forEach(f => {\n      newObj[f] = bookObj[f];\n    })\n\n    let books = this.state.books.concat(newObj);\n    this.save(books);\n    this.setState({\n      books: books\n    })\n  }\n\n  toggleRead = (id) => {\n    this.setState({\n      books: this.state.books.map((book) => {\n        if (book.id === id) {\n          book.read = !book.read;\n        }\n        return book;\n      })\n    })\n  }\n\n  deleteEntry = (id) => {\n    let books = this.state.books.filter(book => book.id !== id);\n    this.save(books);\n    this.setState({\n      books: books\n    })\n  }\n\n  toggleAddForm = () => {\n    this.setState({\n      addForm: !this.state.addForm\n    })\n  }\n\n  clearLib = () => {\n    let books = [];\n    this.save(books);\n    this.setState({\n      books: books\n    })\n  }\n\n  render() {\n    const fields = ['id', 'title', 'author', 'year', 'genre', 'pages', 'read', 'delete'];\n    const {books, addForm} = this.state;\n    \n    let showForm = '';\n    if (addForm) {\n      showForm = 'show';\n    }\n\n    return (\n      <div>\n        <Header />\n        <AddBook handleSubmit={this.handleSubmit} showForm={showForm}\n          toggleAddForm={this.toggleAddForm}/>\n        <MainLibrary \n          books={books} \n          toggleRead={this.toggleRead}\n          deleteEntry={this.deleteEntry}\n          fields={fields}\n          toggleAddForm={this.toggleAddForm}\n          clearLib={this.clearLib}\n        />\n      </div>\n    );   \n  }\n}\n\n\nexport default LibraryApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport LibraryApp from './App';\n\nReactDOM.render(<LibraryApp />, document.getElementById('root'));\n\n"],"sourceRoot":""}